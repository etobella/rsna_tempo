# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-11-26 01:08
from __future__ import unicode_literals

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PowerscribeReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cwid', models.CharField(max_length=80)),
                ('name', models.CharField(max_length=100)),
                ('accession', models.CharField(max_length=100)),
                ('creator_email', models.CharField(max_length=90)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PowerscribeReportData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PowerscribeReportDatum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_values', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(max_length=100), blank=True, default=[], size=100)),
                ('report_key', models.CharField(blank=True, max_length=100)),
                ('report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Report_from_Datum', to='report_templates.PowerscribeReport')),
            ],
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_description', models.CharField(blank=True, max_length=100)),
                ('patient_gender', models.CharField(blank=True, max_length=30)),
            ],
            options={
                'ordering': ('service_description', 'patient_gender'),
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header', models.CharField(choices=[('CLINICAL STATEMENT', 'CLINICAL STATEMENT'), ('TECHNIQUE', 'TECHNIQUE'), ('HISTORY', 'HISTORY'), ('COMPARISON', 'COMPARISON'), ('INDICATIONS', 'INDICATIONS'), ('PRIOR INTERVENTIONS', 'PRIOR INTERVENTIONS'), ('MEDICATION', 'MEDICATION'), ('FINDINGS', 'FINDINGS'), ('IMPRESSION', 'IMPRESSION')], max_length=50)),
                ('header_description', models.CharField(blank=True, max_length=2000)),
                ('order_priority', models.PositiveSmallIntegerField(null=True, verbose_name='Position')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report_templates.ReportTemplate')),
            ],
            options={
                'ordering': ('order_priority',),
            },
        ),
        migrations.CreateModel(
            name='SectionAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('information_type', models.CharField(choices=[('Measurement', 'Measurement'), ('Region of Interest', 'Region of Interest'), ('Scanner', 'Scanner'), ('Contrast Type', 'Contrast Type'), ('Contrast Volume', 'Contrast Volume'), ('Oral Contrast', 'Oral Contrast'), ('Procedure', 'Procedure')], max_length=50)),
                ('information_item', models.CharField(max_length=80)),
                ('information_item_description', models.CharField(blank=True, max_length=2000)),
                ('order_priority', models.PositiveSmallIntegerField(null=True, verbose_name='Position')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report_templates.Section')),
            ],
            options={
                'ordering': ('order_priority',),
            },
        ),
        migrations.AlterIndexTogether(
            name='reporttemplate',
            index_together=set([('service_description', 'patient_gender')]),
        ),
        migrations.AddField(
            model_name='powerscribereportdatum',
            name='report_template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Report_Template_from_Datum', to='report_templates.ReportTemplate'),
        ),
        migrations.AddField(
            model_name='powerscribereportdata',
            name='report_data_entries',
            field=models.ManyToManyField(to='report_templates.PowerscribeReportDatum'),
        ),
        migrations.AddField(
            model_name='powerscribereport',
            name='report_data',
            field=models.ManyToManyField(to='report_templates.PowerscribeReportData'),
        ),
        migrations.AddField(
            model_name='powerscribereport',
            name='report_template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Report_Template', to='report_templates.ReportTemplate'),
        ),
        migrations.AlterIndexTogether(
            name='sectionattribute',
            index_together=set([('information_type', 'order_priority')]),
        ),
        migrations.AlterIndexTogether(
            name='section',
            index_together=set([('header', 'order_priority')]),
        ),
    ]
